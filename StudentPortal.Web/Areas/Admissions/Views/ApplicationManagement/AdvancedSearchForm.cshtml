@model StudentPortal.Domain.ViewModels.AdvancedApplicationSearchViewModel

@{
    ViewBag.Title = "Advanced Application Search";

    List<Course> _courses = (List<Course>) ViewBag.Courses;
    List<CourseGroup> _groups = (List<CourseGroup>) ViewBag.CourseGroups;
    List<ISelectable> _selectableGroups = _groups.ToList<ISelectable>();
    List<ISelectable> _progress = ((List<ApplicationProgress>) ViewBag.ApplicationProgress).ToList<ISelectable>();
}

<h2 class="page-header">Advanced Application Search</h2>

@using (Html.BeginForm("AdvancedSearch", "ApplicationManagement", FormMethod.Get))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Page)

    <div class="form-group">
        @Html.LabelFor(model => model.Search)
        @Html.EditorFor(model => model.Search, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Search, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProgressId)
        @Html.DropDownListFor(model => model.ProgressId, _progress.ToSelectList(Model.ProgressId.ToString()), "Optionally select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProgressId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate)
        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate)
        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CourseId)
        @Html.DropDownListFor(model => model.CourseId, _courses.ToSelectList(_groups, Model.CourseId), "Optionally select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CourseGroupId)
        @Html.DropDownListFor(model => model.CourseGroupId, _selectableGroups.ToSelectList(Model.CourseGroupId.ToString()), "Optionally select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CourseGroupId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group block">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Default")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
