@model StudentPortal.Domain.Models.PersonalDetails

@{
    ViewBag.Title = "Personal Details";

    // Data to populate the select list options
    var _titles = ((List<Title>) ViewBag.Titles).ToList<ISelectable>();
    var _genders = ((List<Gender>) ViewBag.Genders).ToList<ISelectable>();
    var _countries = ((List<Country>) ViewBag.Countries).ToList<ISelectable>();
    var _ethnicities = ((List<Ethnicity>) ViewBag.Ethnicities).ToList<ISelectable>();
}

<ol class="breadcrumb">
    <li><a href="~/">Home</a></li>
    <li><a href="@Url.Action("Default", "Applications")">My applications</a></li>
    <li><a href="@Url.Action("Manage", "Applications")">Current application</a></li>
    <li class="active">Personal details</li>
</ol>

<h2 class="page-header">Personal Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Title)
        @Html.DropDownListFor(model => model.Title, _titles.ToSelectList(Model.Title), "Please select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender)
        @Html.DropDownListFor(model => model.Gender, _genders.ToSelectList(Model.Gender), "Please select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Forename)
        @Html.EditorFor(model => model.Forename, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Forename, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Surname)
        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress)
        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth)
        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MobileNumber)
        @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TelephoneNumber)
        @Html.EditorFor(model => model.TelephoneNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.TelephoneNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NextOfKinName)
        @Html.EditorFor(model => model.NextOfKinName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NextOfKinName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NextOfKinContactNumber)
        @Html.EditorFor(model => model.NextOfKinContactNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NextOfKinContactNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nationality)
        @Html.DropDownListFor(model => model.Nationality, _countries.ToSelectList(Model.Nationality), "Please select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ethnicity)
        @Html.DropDownListFor(model => model.Ethnicity, _ethnicities.ToSelectList(Model.Ethnicity), "Please select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Ethnicity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country)
        @Html.DropDownListFor(model => model.Country, _countries.ToSelectList(Model.Country), "Please select...", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
    </div>

    <div class="form-group block">
        <button class="btn btn-success" type="submit">Continue</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
